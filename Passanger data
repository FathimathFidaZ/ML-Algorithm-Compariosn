{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1dbaa207-6ad0-4f70-888f-4aa75ea0fe0b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f76f82ba-0bb4-4be5-9f04-4b1447559975",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.0000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.4500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.0000</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.7500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass  \\\n",
       "0              1         0       3   \n",
       "1              2         1       1   \n",
       "2              3         1       3   \n",
       "3              4         1       1   \n",
       "4              5         0       3   \n",
       "..           ...       ...     ...   \n",
       "886          887         0       2   \n",
       "887          888         1       1   \n",
       "888          889         0       3   \n",
       "889          890         1       1   \n",
       "890          891         0       3   \n",
       "\n",
       "                                                  Name     Sex   Age  SibSp  \\\n",
       "0                              Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1    Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                               Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3         Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                             Allen, Mr. William Henry    male  35.0      0   \n",
       "..                                                 ...     ...   ...    ...   \n",
       "886                              Montvila, Rev. Juozas    male  27.0      0   \n",
       "887                       Graham, Miss. Margaret Edith  female  19.0      0   \n",
       "888           Johnston, Miss. Catherine Helen \"Carrie\"  female   NaN      1   \n",
       "889                              Behr, Mr. Karl Howell    male  26.0      0   \n",
       "890                                Dooley, Mr. Patrick    male  32.0      0   \n",
       "\n",
       "     Parch            Ticket     Fare Cabin Embarked  \n",
       "0        0         A/5 21171   7.2500   NaN        S  \n",
       "1        0          PC 17599  71.2833   C85        C  \n",
       "2        0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3        0            113803  53.1000  C123        S  \n",
       "4        0            373450   8.0500   NaN        S  \n",
       "..     ...               ...      ...   ...      ...  \n",
       "886      0            211536  13.0000   NaN        S  \n",
       "887      0            112053  30.0000   B42        S  \n",
       "888      2        W./C. 6607  23.4500   NaN        S  \n",
       "889      0            111369  30.0000  C148        C  \n",
       "890      0            370376   7.7500   NaN        Q  \n",
       "\n",
       "[891 rows x 12 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.read_csv('titanic.csv')\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "aa321dad-503a-4ca5-bd46-4d16cefe63ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>22.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>38.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>C85</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>35.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>C123</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex   Age  SibSp  \\\n",
       "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
       "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
       "4                           Allen, Mr. William Henry    male  35.0      0   \n",
       "\n",
       "   Parch            Ticket     Fare Cabin Embarked  \n",
       "0      0         A/5 21171   7.2500   NaN        S  \n",
       "1      0          PC 17599  71.2833   C85        C  \n",
       "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
       "3      0            113803  53.1000  C123        S  \n",
       "4      0            373450   8.0500   NaN        S  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "bbad5b09-3fb7-4c28-b6d6-2c0abfbaca2d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Cabin</th>\n",
       "      <th>Embarked</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>887</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>Montvila, Rev. Juozas</td>\n",
       "      <td>male</td>\n",
       "      <td>27.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>211536</td>\n",
       "      <td>13.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>888</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Graham, Miss. Margaret Edith</td>\n",
       "      <td>female</td>\n",
       "      <td>19.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>112053</td>\n",
       "      <td>30.00</td>\n",
       "      <td>B42</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>889</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Johnston, Miss. Catherine Helen \"Carrie\"</td>\n",
       "      <td>female</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>W./C. 6607</td>\n",
       "      <td>23.45</td>\n",
       "      <td>NaN</td>\n",
       "      <td>S</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>890</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Behr, Mr. Karl Howell</td>\n",
       "      <td>male</td>\n",
       "      <td>26.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111369</td>\n",
       "      <td>30.00</td>\n",
       "      <td>C148</td>\n",
       "      <td>C</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>891</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Dooley, Mr. Patrick</td>\n",
       "      <td>male</td>\n",
       "      <td>32.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>370376</td>\n",
       "      <td>7.75</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Q</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId  Survived  Pclass                                      Name  \\\n",
       "886          887         0       2                     Montvila, Rev. Juozas   \n",
       "887          888         1       1              Graham, Miss. Margaret Edith   \n",
       "888          889         0       3  Johnston, Miss. Catherine Helen \"Carrie\"   \n",
       "889          890         1       1                     Behr, Mr. Karl Howell   \n",
       "890          891         0       3                       Dooley, Mr. Patrick   \n",
       "\n",
       "        Sex   Age  SibSp  Parch      Ticket   Fare Cabin Embarked  \n",
       "886    male  27.0      0      0      211536  13.00   NaN        S  \n",
       "887  female  19.0      0      0      112053  30.00   B42        S  \n",
       "888  female   NaN      1      2  W./C. 6607  23.45   NaN        S  \n",
       "889    male  26.0      0      0      111369  30.00  C148        C  \n",
       "890    male  32.0      0      0      370376   7.75   NaN        Q  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e92ef59e-3744-4004-81fe-524af9837988",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 891 entries, 0 to 890\n",
      "Data columns (total 12 columns):\n",
      " #   Column       Non-Null Count  Dtype  \n",
      "---  ------       --------------  -----  \n",
      " 0   PassengerId  891 non-null    int64  \n",
      " 1   Survived     891 non-null    int64  \n",
      " 2   Pclass       891 non-null    int64  \n",
      " 3   Name         891 non-null    object \n",
      " 4   Sex          891 non-null    object \n",
      " 5   Age          714 non-null    float64\n",
      " 6   SibSp        891 non-null    int64  \n",
      " 7   Parch        891 non-null    int64  \n",
      " 8   Ticket       891 non-null    object \n",
      " 9   Fare         891 non-null    float64\n",
      " 10  Cabin        204 non-null    object \n",
      " 11  Embarked     889 non-null    object \n",
      "dtypes: float64(2), int64(5), object(5)\n",
      "memory usage: 83.7+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "af41a25d-1eda-496d-8834-1ded00792708",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Age</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>714.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "      <td>891.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.383838</td>\n",
       "      <td>2.308642</td>\n",
       "      <td>29.699118</td>\n",
       "      <td>0.523008</td>\n",
       "      <td>0.381594</td>\n",
       "      <td>32.204208</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>257.353842</td>\n",
       "      <td>0.486592</td>\n",
       "      <td>0.836071</td>\n",
       "      <td>14.526497</td>\n",
       "      <td>1.102743</td>\n",
       "      <td>0.806057</td>\n",
       "      <td>49.693429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.420000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>223.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>20.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.910400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>446.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.454200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>668.500000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>38.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>891.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>512.329200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
       "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
       "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
       "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
       "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
       "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
       "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
       "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
       "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
       "\n",
       "            Parch        Fare  \n",
       "count  891.000000  891.000000  \n",
       "mean     0.381594   32.204208  \n",
       "std      0.806057   49.693429  \n",
       "min      0.000000    0.000000  \n",
       "25%      0.000000    7.910400  \n",
       "50%      0.000000   14.454200  \n",
       "75%      0.000000   31.000000  \n",
       "max      6.000000  512.329200  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a73b4c24-5e29-4e3d-baa0-30747d9b4e23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId      0\n",
       "Survived         0\n",
       "Pclass           0\n",
       "Name             0\n",
       "Sex              0\n",
       "Age            177\n",
       "SibSp            0\n",
       "Parch            0\n",
       "Ticket           0\n",
       "Fare             0\n",
       "Cabin          687\n",
       "Embarked         2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "acbf11fa-82ce-48ec-860a-9aeb3630aeae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(891, 12)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "add4a5ee-f7de-45d6-85fe-ffda69ee2087",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp',\n",
       "       'Parch', 'Ticket', 'Fare', 'Cabin', 'Embarked'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "3c9a4f08-c726-4ee0-b457-965ba01eddcd",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Age'] = df['Age'].fillna(df['Age'].mean())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "5449422e-6e21-43fe-b435-f20284c9cf58",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId      0\n",
       "Survived         0\n",
       "Pclass           0\n",
       "Name             0\n",
       "Sex              0\n",
       "Age            891\n",
       "SibSp            0\n",
       "Parch            0\n",
       "Ticket           0\n",
       "Fare             0\n",
       "Cabin          687\n",
       "Embarked         2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "68effbf4-2619-413e-af57-bf747f006735",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Age','Cabin','Embarked'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "ad976b73-c715-4b73-bec7-31fec08ad620",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId    0\n",
       "Survived       0\n",
       "Pclass         0\n",
       "Name           0\n",
       "Sex            0\n",
       "SibSp          0\n",
       "Parch          0\n",
       "Ticket         0\n",
       "Fare           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "d7704818-f000-4a34-a040-d2956559b51f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>Name</th>\n",
       "      <th>Sex</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Ticket</th>\n",
       "      <th>Fare</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Braund, Mr. Owen Harris</td>\n",
       "      <td>male</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>A/5 21171</td>\n",
       "      <td>7.2500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n",
       "      <td>female</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>PC 17599</td>\n",
       "      <td>71.2833</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>Heikkinen, Miss. Laina</td>\n",
       "      <td>female</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>STON/O2. 3101282</td>\n",
       "      <td>7.9250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n",
       "      <td>female</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>113803</td>\n",
       "      <td>53.1000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>Allen, Mr. William Henry</td>\n",
       "      <td>male</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>373450</td>\n",
       "      <td>8.0500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  \\\n",
       "0            1         0       3   \n",
       "1            2         1       1   \n",
       "2            3         1       3   \n",
       "3            4         1       1   \n",
       "4            5         0       3   \n",
       "\n",
       "                                                Name     Sex  SibSp  Parch  \\\n",
       "0                            Braund, Mr. Owen Harris    male      1      0   \n",
       "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female      1      0   \n",
       "2                             Heikkinen, Miss. Laina  female      0      0   \n",
       "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female      1      0   \n",
       "4                           Allen, Mr. William Henry    male      0      0   \n",
       "\n",
       "             Ticket     Fare  \n",
       "0         A/5 21171   7.2500  \n",
       "1          PC 17599  71.2833  \n",
       "2  STON/O2. 3101282   7.9250  \n",
       "3            113803  53.1000  \n",
       "4            373450   8.0500  "
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "ccc0c14a-6b3a-4c60-99f0-9675e2201fab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['PassengerId', 'Survived', 'Pclass', 'Name', 'Sex', 'SibSp', 'Parch',\n",
       "       'Ticket', 'Fare'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "9cef7cec-1dc5-44cf-a122-fd5d4c055866",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='count', ylabel='Sex'>"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(y=df['Sex'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "114e6a83-939f-4f59-9413-07220967ea0e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.PairGrid at 0x23440b82c90>"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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RPQaPxbgKXVYYDNJaOoIQYJAMKIhoIThcdngV9SU81y6PmeVJbQEFJhlqbNGWbRtTrMMs0lCeygCbyACt82EUqclXsCzN7L1s+76YLp9MhjR0OJXkraj02pCeR/aRv0zUMfQvAuIDwYG2IiGDvZXoqGBfZVo6GB/JRoa2FeJhg72V6L8NuRziBMRERERERERERER9QQD4kRERERERERERERUEBgQJyIiIiIiIiIiIqKCwIA4ERERERERERERERUEBsSJiIiIiIiIiIiIqCAwIE5EREREREREREREBYEBcSIiIiIiIiIiIiIqCAyIExEREREREREREVFBYECciIiIiIiIiIiIiAoCA+JEREREREREREREVBAYECciIiIiIiIiIiKigsCAOBEREREREREREREVBAbEiYiIiIiIiIiIiKggMCBORERERERERERERAWBAXEiIiIiIiIiIiIiKggMiBMRERERERERERFRQWBAnIiIiIiIiIiIiIgKAgPiRERERERERERERFQQGBAnIiIiIiIiIiIiooLAgDgRERERERERERERFQQGxImIiIiIiIiIiIioIDAgTkREREREREREREQFgQFxIiIiIiIiIiIiIioIDIgTERERERERERERUUFgQJyIiIiIiIiIiIiICgID4kRERERERERERERUEBgQJyIiIiIiIiIiIqKCwIA4ERERERERERERERUEBsSJiIiIiIiIiIiIqCAwIE5EREREREREREREBSEvA+IPPfQQqqqqYLPZMHPmTLz11ltZX//nP/8ZRxxxBBwOB8aMGYP58+ejubnZoNYSERERERERERER0VCQdwHxp556CldffTVuuukmNDQ0YM6cOTj99NOxc+fOtK9fvXo1LrroIlx66aXYuHEjnn76abzzzju47LLLDG45EREREREREREREeWzvAuI33///bj00ktx2WWXYfLkyXjwwQcxduxYPPzww2lfv27dOowfPx6LFi1CVVUV6uvr8YMf/ADvvvuuwS0nIiIiIiIiIiIionyWVwFxRVHw3nvv4ZRTTkl6/JRTTsHatWvT/s7s2bPxxRdf4KWXXoKu69i3bx/++te/4swzzzSiyUREREREREREREQ0RJgGuwGJmpqaoKoqRo0alfT4qFGjsHfv3rS/M3v2bPz5z3/Gt7/9bQSDQUQiEZxzzjlYsmRJxvWEQiGEQqH4z16vNzdvgIhyrj/9defOnWhqaup3G8rKylBZWdnv5RANZzy3Eg0d7K9EQwP7KtHQwf5KNLTkVUA8RgiR9LOu6ymPxXz88cdYtGgRbr31Vpx66qnYs2cPfvrTn+Lyyy/H448/nvZ37r77btx+++05bzcR5V5f++vOnTsxadJkBAL+frfBbnfgk082MShOlAXPrURDB/sr0dDAvko0dLC/Eg0tQtd1fbAbEaMoChwOB55++mmcd9558cd/9KMf4b///S/efPPNlN+58MILEQwG8fTTT8cfW716NebMmYPdu3djzJgxKb+T7s7d2LFj0dbWBrfbneN3RUT90df++v7772PmzJk4ZsFtcI8Z3+f1e/d8jvXLbsd7772Ho446qs/LIRrueG4lGjrYX4mGBvZVoqGD/ZVoaMmrEeIWiwUzZ87EqlWrkgLiq1atwje+8Y20v+P3+2EyJb8NWZYBREeWp2O1WmG1WnPUaiIaSP3tr+4x4zGicmIOW0RE6fDcSjR0sL8SDQ3sq0RDB/sr0dCSV0U1AeDaa6/F73//eyxbtgybNm3CNddcg507d+Lyyy8HANx444246KKL4q8/++yz8eyzz+Lhhx/Gtm3bsGbNGixatAhHH300KioqButtEBEREREREREREVGeyasR4gDw7W9/G83NzbjjjjuwZ88eTJs2DS+99BLGjRsHANizZw927twZf/0ll1yC9vZ2LF26FD/+8Y9RUlKCE088Effcc89gvQUiIiIiIiIiIiIiykN5FxAHgCuuuAJXXHFF2ueWL1+e8thVV12Fq666aoBbRURERERERERERERDWd6lTCEiIiIiIiIiIiIiGggMiBMRERERERERERFRQWBAnIiIiIiIiIiIiIgKAgPiRERERERERERERFQQGBAnIiIiIiIiIiIiooLAgDgRERERERERERERFQQGxImIiIiIiIiIiIioIDAgTkREREREREREREQFgQFxIiIiIiIiIiIiIioIDIgTERERERERERERUUFgQJyIiIiIiIiIiIiICgID4kRERERERERERERUEBgQJyIiIiIiIiIiIqKCwIA4ERERERERERERERUEBsSJiIiIiIiIiIiIqCAwIE5EREREREREREREBYEBcSIiIiIiIiIiIiIqCAyIExEREREREREREVFBYECciIiIiIiIiIiIiAoCA+JEREREREREREREVBAYECciIiIiIiIiIiKigsCAOBEREREREREREREVBAbEiYiIiIiIiIiIiKggMCBORERERERERERERAWBAXEiIiIiIiIiIiIiKggMiBMRERERERERERFRQWBAnIiIiIiIiIiIiIgKAgPiRERERERERERERFQQTH39xf/5n//p8WufffbZvq6GiIiIiIiIiIiIiCgn+jxCvLi4OP7H7Xbjtddew7vvvht//r333sNrr72G4uLinDSUiIiIiIiIiIiIiKg/+hwQf+KJJ+J/Ro0ahfPPPx/bt2/Hs88+i2effRbbtm3Dd77zHZSVlfV62Q899BCqqqpgs9kwc+ZMvPXWW1lfHwqFcNNNN2HcuHGwWq047LDDsGzZsr6+NSIiIiIiIiIiIiIahvqcMiXRsmXLsHr1asiyHH9MlmVce+21mD17Nu67774eL+upp57C1VdfjYceegh1dXV45JFHcPrpp+Pjjz9GZWVl2t85//zzsW/fPjz++OOorq5GY2MjIpFIv98XEREREREREREREQ0fOQmIRyIRbNq0CRMnTkx6fNOmTdA0rVfLuv/++3HppZfisssuAwA8+OCD+Ne//oWHH34Yd999d8rrX375Zbz55pvYtm0bRowYAQAYP358394IEREREREREREREQ1bOQmIz58/HwsWLMCWLVvw1a9+FQCwbt06/OIXv8D8+fN7vBxFUfDee+/hhhtuSHr8lFNOwdq1a9P+zvPPP49Zs2bh3nvvxR//+Ec4nU6cc845uPPOO2G32/v+poiIiIiIiIiIiIhoWMlJQPyXv/wlRo8ejQceeAB79uwBAIwZMwbXXXcdfvzjH/d4OU1NTVBVFaNGjUp6fNSoUdi7d2/a39m2bRtWr14Nm82G5557Dk1NTbjiiitw4MCBjHnE/3/27j0+jrLu//97ZjfZzblt0pZWUii0FGhBS0HBlgICRfAEltsDtwIFuUVAhX4RrKgcBArorb31FlBvoPBDuFEr3iiI1Bs5tCLelHIQyqFSSA9pQ0qbTbLZ08z8/tid7exmk+awSfbwej4e2+zOzHVdn+u65trNfrKdjUajikaj6cehUGjAMQIYXaxXoDiwVoHiwXoFigNrFSgerFeguAz5SzUzKjFNXXHFFdq6dat2796t3bt3a+vWrbriiisyris+UIZhZDx2HKfXNpdt2zIMQ7/85S/1wQ9+UKeddpp++MMfauXKlerp6clZZvny5WpoaEjfmpubBx0jgNHBegWKA2sVKB6sV6A4sFaB4sF6BYpLXhLiUvI64n/+8591//33p5PX27ZtU1dX14DraGpqks/n6/Vp8La2tl6fGndNmTJF73vf+9TQ0JDedsghh8hxHG3ZsiVnmWXLlqmjoyN927x584BjBDC6WK9AcWCtAsWD9QoUB9YqUDxYr0BxycslU9555x199KMfVUtLi6LRqE4++WTV1dXplltuUSQS0e233z6geiorKzVv3jytXr1aZ5xxRnr76tWr9alPfSpnmfnz5+vXv/61urq6VFtbK0l64403ZJqm9t1335xlAoGAAoHAIHsJYCywXoHiwFoFigfrFSgOrFWgeLBegeKSl0+If/3rX9eRRx6pXbt2ZXyR5RlnnKH//d//HVRdS5cu1X/913/pzjvv1IYNG3TZZZeppaVFF154oaTkX93OPvvs9PFnnXWWGhsbtWTJEr366qt66qmn9I1vfEPnnXceX6oJAAAAAAAAAEjLyyfE16xZo7Vr16qysjJj+3777aetW7cOqq7Pfvaz2rlzp6677jq1trZqzpw5euSRR7TffvtJklpbW9XS0pI+vra2VqtXr9ZXv/pVHXnkkWpsbNRnPvMZXX/99cPvGAAAAAAAAACgZOQlIW7btizL6rV9y5YtqqurG3R9F110kS666KKc+1auXNlr28EHH6zVq1cPuh0AAAAAAAAAQPnIyyVTTj75ZK1YsSL92DAMdXV16eqrr9Zpp52WjyYAAAAAAAAAABiWvHxC/Ec/+pFOOOEEHXrooYpEIjrrrLP05ptvqqmpSffff38+mgAAAAAAAAAAYFjykhCfOnWqXnjhBd1///16/vnnZdu2zj//fP3rv/4rX2wJAAAAAAAAACgIeUmIh8NhVVdX67zzztN5552XjyoBAAAAAAAAAMirvFxDfNKkSfrCF76gP/3pT7JtOx9VAgAAAAAAAACQV3lJiN9zzz2KRqM644wzNHXqVH3961/X//3f/+WjagAAAAAAAAAA8iIvCfFPf/rT+vWvf60dO3Zo+fLl2rBhgz784Q/roIMO0nXXXZePJgAAAAAAAAAAGJa8JMRddXV1WrJkiR577DG9+OKLqqmp0bXXXpvPJgAAAAAAAAAAGJK8JsQjkYh+9atf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S5dqwYIFmjNnTp/Hbd++XZMnT87YNnnyZCUSCbW3t+csE41GFQqFMm57094V06S6gCbXB1UT8Gvtxp2a2zwu/XNyfTB937vfe989RpIm1Qd6PSlNqg+kj59UH0gfP6k+IEdG+ni3Xff+5PpgOi73vred7H01Ab+iCTv92Bv73u5726wJ+NO37P1u/bnKu7zj443TfZy9z9tmdt199T+7vb7KeOfLbdfbV+9+77x4963duFN+n9nnudFXn9259Z4Tbnl3mze2XGPujleuefKOhVufd0z7KpPrfvYYe8cgl6ffbFd71/De+A1mvXZGEn3GsmbjTnVGEsOKBSgFI7VOhvLaCmBsFNpra6m0ISXfM2Qnw11P5eH3IpSXQlurA0Ece+zqjvUbw65ung9KyXDWa8JyNKm/99Wp9+TZ2ybVJy9B675nX7Nxp2oCPnX0JD8c2t85uNZTJ++VUY7ylhC3LEu1tbWSpKamJm3btk2StN9++w3oizGzXXLJJXrppZd0//337/VY97IsruzLtWRbvny5Ghoa0rfm5ua9thGKxBVN2IombHVFkv9NJZqw0z+99737vffdYySlt3t1Raz09q6IlT6+K2Kps2fPp9299bj1um3laid7X1fEUqgnnlE2Vz9y3fc+duP1xurud+vPVd57XHZ/vY+z93nbzK67r/5nt9dXGW883rnJNbfeefHuk5Sep/7GLrtfbpnsdr3bssc7e8z7mofsscg1pn2VyXU/e4yz28ylMzK8/6kxmPUa6um/reHGApSCkVonQ3ltBTA2Cu21tVTakJLvGUajHZSHQlurA0Ecnhj2kmDc234Ul+GsV2/+pC+59veVQ3DP772dY946eX1CuclbQnzOnDl66aWXJEkf+tCHdMstt2jt2rW67rrrdMABBwyqrq9+9at66KGH9Je//EX77rtvv8fus88+2r59e8a2trY2+f1+NTY25iyzbNkydXR0pG+bN2/ea0z1wQoF/KYCflO1weSXGgb8Zvqn9753v/e+e4yk9Hav2qAvvb026EsfXxv0qa6qIn2ctx63XretXO1k76sN+lRfVZFRNlc/ct33Pnbj9cbq7nfrz1Xee1x2f72Ps/d528yuu6/+Z7fXVxlvPN65yTW33nnx7pOUnqf+xi67X26Z7Ha927LHO3vM+5qH7LHINaZ9lcl1P3uMs9vMpS5Y0e/+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YQMWL14ccRcOAGbPno2xY8fi6aefjrsc3rkjyh1sr0S5gW2VKHewvRLlBrZVotzB9kqUWwa1h3g0g8GA2tpa7N+/H3PnzgUQ6gUenhBva2sTe42XlZXB4/Ggs7Mzopd4W1sbpk2blnA5Go0GGo1mYFaCiDKK7ZUoN7CtEuUOtlei3MC2SpQ72F6JcsugD6oZzu12Y+/evRg5ciSqqqpQVlaGd999V5zu8Xjw/vvvi8nus88+GyqVKuI9R48exe7du5MmxImIiIiIiIiIiIgo/wxqD/HbbrsNV1xxBSorK9HW1oaVK1fCarVi4cKFkMlkWLZsGVavXo2amhrU1NRg9erV0Ov1uOaaawAAJpMJ1113HW699VaYzWYMGzYMt912G2prazFr1qzBXDUiIiIiIiIiIiIikphBTYgfOXIECxYsQHt7O4YPH47zzjsP//znPzF69GgAwO233w6n04mbbroJnZ2dmDp1Kt555x0UFhaK83j88cehVCpx9dVXw+l04uKLL8YLL7wAhUIxWKtFRERERERERERERBIkqUE1B4vVaoXJZOJgB0Q5gO2VKDewrRLlDrZXotzAtkqUO9heiaRNUjXEiYiIiIiIiIiIiIgGChPiRERERERERERERJQXmBAnIiIiIiIiIiIiorzAhDgRERERERERERER5QUmxImIiIiIiIiIiIgoLzAhTkRERERERERERER5gQlxIiIiIiIiIiIiIsoLTIgTERERERERERERUV5gQpyIiIiIiIiIiIiI8gIT4kRERERERERERESUF5gQJyIiIiIiIiIiIqK8wIQ4EREREREREREREeUFJsSJiIiIiIiIiIiIKC8wIU5EREREREREREREeYEJcSIiIiIiIiIiIiLKC0yIExEREREREREREVFeYEKciIiIiIiIiIiIiPICE+JERERERERERERElBeYECciIiIiIiIiIiKivMCEOBERERERERERERHlBSbEiYiIiIiIiIiIiCgvMCFORERERERERERERHmBCXEiIiIiIiIiIiIiygtMiBMRERERERERERFRXmBCnIiIiIiIiIiIiIjyAhPiRERERERERERERJQXmBAnIiIiIiIiIiIiorzAhDgRERERERERERER5QUmxImIiIiIiIiIiIgoL0gmIb5mzRrIZDIsW7ZMfC0YDGLFihUoLy+HTqfDhRdeiD179kR8zu1245ZbbkFJSQkMBgOuvPJKHDlyJMvRExEREREREREREZHUSSIh/tFHH+EXv/gFJk+eHPH62rVr8dhjj2H9+vX46KOPUFZWhtmzZ6O7u1t8z7Jly7Bx40a8/PLL2LZtG2w2G+bMmQO/35/t1SAiIiIiIiIiIiIiCRv0hLjNZsO1116LZ555BsXFxeLrwWAQTzzxBJYvX46vfe1rmDRpEl588UU4HA5s2LABAGCxWPDss8/i0UcfxaxZs1BXV4ff/OY3aGxsxHvvvTdYq0REREREREREREREEjToCfGbb74Zl19+OWbNmhXx+sGDB3Hs2DFccskl4msajQYXXHABPvjgAwDAjh074PV6I95TXl6OSZMmie+Jx+12w2q1RvwhImlieyXKDWyrRLmD7ZUoN7CtEuUOtlei3DKoCfGXX34Zn3zyCdasWRMz7dixYwCA0tLSiNdLS0vFaceOHYNarY7oWR79nnjWrFkDk8kk/qmoqOjvqhDRAGF7JcoNbKtEuYPtlSg3sK0S5Q62V6LcMmgJ8cOHD+N///d/8Zvf/AZarTbh+2QyWcS/g8FgzGvRUr3nrrvugsViEf8cPny4d8ETUdawvRLlBrZVotzB9kqUG9hWiXIH2ytRblEO1oJ37NiBtrY2nH322eJrfr8fW7Zswfr167Fv3z4AoV7gI0eOFN/T1tYm9hovKyuDx+NBZ2dnRC/xtrY2TJs2LeGyNRoNNBpNpleJiAYA2ytRbmBbJcodbK9EuYFtlSh3sL0S5ZZB6yF+8cUXo7GxEf/+97/FP1OmTMG1116Lf//73xgzZgzKysrw7rvvip/xeDx4//33xWT32WefDZVKFfGeo0ePYvfu3UkT4kRERERERERERESUfwath3hhYSEmTZoU8ZrBYIDZbBZfX7ZsGVavXo2amhrU1NRg9erV0Ov1uOaaawAAJpMJ1113HW699VaYzWYMGzYMt912G2pra2MG6SQiIiIiIiIiIiKi/DZoCfF03H777XA6nbjpppvQ2dmJqVOn4p133kFhYaH4nscffxxKpRJXX301nE4nLr74YrzwwgtQKBSDGDkRERERERERERERSY0sGAwGBzuIwWa1WmEymWCxWGA0Ggc7HCJKgu2VKDewrRLlDrZXotzAtkqUO9heiaRt0GqIExERERERERERERFlExPiRERERERERERERJQXmBAnIiIiIiIiIiIiorzAhDgRERERERERERER5QUmxImIiIiIiIiIiIgoLzAhTkRERERERERERER5gQlxIiIiIiIiIiIiIsoLTIgTERERERERERERUV5gQpyIiIiIiIiIiIiI8gIT4kRERERERERERESUF5gQJyIiIiIiIiIiIqK8wIQ4EREREREREREREeUFJsSJiIiIiIiIiIiIKC8wIU5EREREREREREREeYEJcSIiIiIiIiIiIiLKC0yIExEREREREREREVFeYEKciIiIiIiIiIiIiPICE+JERERERERERERElBeYECciIiIiIiIiIiKivMCEOBERERERERERERHlBSbEiYiIiIiIiIiIiCgvMCFORERERERERERERHmBCXEiIiIiIiIiIiIiygtMiBMRERERERERERFRXmBCnIiIiIiIiIiIiIjyAhPiRERERERERERERJQXmBAnIiIiIiIiIiIiorzAhDgRERERERERERER5QUmxImIiIiIiIiIiIgoLwxqQvxnP/sZJk+eDKPRCKPRiPPPPx9//vOfxenBYBArVqxAeXk5dDodLrzwQuzZsydiHm63G7fccgtKSkpgMBhw5ZVX4siRI9leFSIiIiIiIiIiIiKSuEFNiI8aNQoPP/wwPv74Y3z88ceYOXMmrrrqKjHpvXbtWjz22GNYv349PvroI5SVlWH27Nno7u4W57Fs2TJs3LgRL7/8MrZt2wabzYY5c+bA7/cP1moRERERERERERERkQTJgsFgcLCDCDds2DD8+Mc/xpIlS1BeXo5ly5bhjjvuABDqDV5aWopHHnkEN954IywWC4YPH45f//rX+OY3vwkAaGlpQUVFBd566y1ceumlaS3TarXCZDLBYrHAaDQO2LoRUf+xvRLlBrZVotzB9kqUG9hWiXIH2yuRtCkHOwCB3+/HH/7wB9jtdpx//vk4ePAgjh07hksuuUR8j0ajwQUXXIAPPvgAN954I3bs2AGv1xvxnvLyckyaNAkffPBBwoS42+2G2+0W/221WgduxYioX9heiXID2ypR7mB7JcoNbKtEuYPtlSi3DPqgmo2NjSgoKIBGo8H3vvc9bNy4ERMmTMCxY8cAAKWlpRHvLy0tFacdO3YMarUaxcXFCd8Tz5o1a2AymcQ/FRUVGV4rIsoUtlei3MC2SpQ72F6JcgPbKlHuYHslyi2DXjLF4/GgubkZXV1deOWVV/DLX/4S77//Prq6ulBfX4+WlhaMHDlSfP/111+Pw4cP4+2338aGDRuwePHiiLtwADB79myMHTsWTz/9dNxlxrtzV1FRwUdZiCSI7ZUoN7CtEuUOtlei3MC2SpQ72F6Jcsugl0xRq9Worq4GAEyZMgUfffQR/u///k+sG37s2LGIhHhbW5vYa7ysrAwejwednZ0RvcTb2towbdq0hMvUaDTQaDQDsTpElGFsr0S5gW2VKHewvRLlBrZVotzB9kqUWwa9ZEq0YDAIt9uNqqoqlJWV4d133xWneTwevP/++2Ky++yzz4ZKpYp4z9GjR7F79+6kCXEiIiIiIiIiIiIiyj+D2kP87rvvxmWXXYaKigp0d3fj5Zdfxt///ne8/fbbkMlkWLZsGVavXo2amhrU1NRg9erV0Ov1uOaaawAAJpMJ1113HW699VaYzWYMGzYMt912G2prazFr1qzBXDUiIiIiIiIiIiIikphBTYi3trbi29/+No4ePQqTyYTJkyfj7bffxuzZswEAt99+O5xOJ2666SZ0dnZi6tSpeOedd1BYWCjO4/HHH4dSqcTVV18Np9OJiy++GC+88AIUCsVgrRYRERERERERERERSdCgD6opBVarFSaTiYMdEOUAtlei3MC2SpQ72F6JcgPbKlHuYHslkrY+1xD/4osvcM8992DBggVoa2sDALz99tvYs2dPxoIjIiIiIiIiIiIiIsqUPiXE33//fdTW1uLDDz/Eq6++CpvNBgDYtWsX7r///owGSERERERERERERESUCX1KiN95551YuXIl3n33XajVavH1iy66CP/4xz8yFhwRERERERERERERUab0KSHe2NiIefPmxbw+fPhwdHR09DsoIiIiIiIiIiIiIqJMU/blQ0VFRTh69CiqqqoiXt+5cydOOeWUjASWKywOD9ptHlhdXhh1KpQY1DDp1QP2OSlKtC4DtY5DadtlCrdJpFarC512D6wuH4w6JYr1apQatYMdFpGkfNnpgNXlg9XphUmnQqFWiVOK9VmN4UinA91hMRRolRiV5RiISDqycT6TrXOEli4nLE6vuH8z6lQoL9JlfDlElBzPNU7iNSMR0Ul9Sohfc801uOOOO/CHP/wBMpkMgUAA27dvx2233YbvfOc7mY5Rslq6nLjjlV3Yur9dfG1G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",
      "text/plain": [
       "<Figure size 1500x1500 with 42 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.pairplot(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "7d12c45d-01b4-44ae-b4bf-55cf39cf389f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Survived', ylabel='count'>"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.countplot(x='Survived',data=df,hue='Survived')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "6403c369-b845-4f27-856b-8b9ea765bfc9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Name','Ticket'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "2f9791d1-8f4c-43f1-b2f3-86d1044976ab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "PassengerId    0\n",
       "Survived       0\n",
       "Pclass         0\n",
       "Sex            0\n",
       "SibSp          0\n",
       "Parch          0\n",
       "Fare           0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "17b44804-5397-493f-b248-a15aa9f0752a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Sex_male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  SibSp  Parch     Fare  Sex_male\n",
       "0            1         0       3      1      0   7.2500      True\n",
       "1            2         1       1      1      0  71.2833     False\n",
       "2            3         1       3      0      0   7.9250     False\n",
       "3            4         1       1      1      0  53.1000     False\n",
       "4            5         0       3      0      0   8.0500      True"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df=pd.get_dummies(df,drop_first=True)\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "1dce78b4-cb06-4835-b781-9633158dd8c7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Sex_male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>PassengerId</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.005007</td>\n",
       "      <td>-0.035144</td>\n",
       "      <td>-0.057527</td>\n",
       "      <td>-0.001652</td>\n",
       "      <td>0.012658</td>\n",
       "      <td>0.042939</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Survived</th>\n",
       "      <td>-0.005007</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.338481</td>\n",
       "      <td>-0.035322</td>\n",
       "      <td>0.081629</td>\n",
       "      <td>0.257307</td>\n",
       "      <td>-0.543351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pclass</th>\n",
       "      <td>-0.035144</td>\n",
       "      <td>-0.338481</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.083081</td>\n",
       "      <td>0.018443</td>\n",
       "      <td>-0.549500</td>\n",
       "      <td>0.131900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>SibSp</th>\n",
       "      <td>-0.057527</td>\n",
       "      <td>-0.035322</td>\n",
       "      <td>0.083081</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.414838</td>\n",
       "      <td>0.159651</td>\n",
       "      <td>-0.114631</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Parch</th>\n",
       "      <td>-0.001652</td>\n",
       "      <td>0.081629</td>\n",
       "      <td>0.018443</td>\n",
       "      <td>0.414838</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.216225</td>\n",
       "      <td>-0.245489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fare</th>\n",
       "      <td>0.012658</td>\n",
       "      <td>0.257307</td>\n",
       "      <td>-0.549500</td>\n",
       "      <td>0.159651</td>\n",
       "      <td>0.216225</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-0.182333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sex_male</th>\n",
       "      <td>0.042939</td>\n",
       "      <td>-0.543351</td>\n",
       "      <td>0.131900</td>\n",
       "      <td>-0.114631</td>\n",
       "      <td>-0.245489</td>\n",
       "      <td>-0.182333</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             PassengerId  Survived    Pclass     SibSp     Parch      Fare  \\\n",
       "PassengerId     1.000000 -0.005007 -0.035144 -0.057527 -0.001652  0.012658   \n",
       "Survived       -0.005007  1.000000 -0.338481 -0.035322  0.081629  0.257307   \n",
       "Pclass         -0.035144 -0.338481  1.000000  0.083081  0.018443 -0.549500   \n",
       "SibSp          -0.057527 -0.035322  0.083081  1.000000  0.414838  0.159651   \n",
       "Parch          -0.001652  0.081629  0.018443  0.414838  1.000000  0.216225   \n",
       "Fare            0.012658  0.257307 -0.549500  0.159651  0.216225  1.000000   \n",
       "Sex_male        0.042939 -0.543351  0.131900 -0.114631 -0.245489 -0.182333   \n",
       "\n",
       "             Sex_male  \n",
       "PassengerId  0.042939  \n",
       "Survived    -0.543351  \n",
       "Pclass       0.131900  \n",
       "SibSp       -0.114631  \n",
       "Parch       -0.245489  \n",
       "Fare        -0.182333  \n",
       "Sex_male     1.000000  "
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "075df4a0-4f7d-499c-8d3f-6e0d86a2d089",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(df.corr(),annot=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "8a2270da-f707-4303-b5ed-bb61fb09a556",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=df.drop(columns=['Survived'])\n",
    "y=df['Survived']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "e4f7a794-efad-481f-8788-e9f5102b4b86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Sex_male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  SibSp  Parch     Fare  Sex_male\n",
       "0            1         0       3      1      0   7.2500      True\n",
       "1            2         1       1      1      0  71.2833     False\n",
       "2            3         1       3      0      0   7.9250     False\n",
       "3            4         1       1      1      0  53.1000     False\n",
       "4            5         0       3      0      0   8.0500      True"
      ]
     },
     "execution_count": 89,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "e766043c-796c-41c3-979c-4f59771d9952",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "73ca61d5-3dfb-46a2-98e7-eacb272e79bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler=StandardScaler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "b8faf614-7b80-41e5-aada-22a28a87725c",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_scaled=scaler.fit_transform(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "2d6fe409-c057-4777-ba11-4c96de1fb468",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Sex_male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1.730108</td>\n",
       "      <td>0.827377</td>\n",
       "      <td>0.432793</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.502445</td>\n",
       "      <td>0.737695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>-1.726220</td>\n",
       "      <td>-1.566107</td>\n",
       "      <td>0.432793</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>0.786845</td>\n",
       "      <td>-1.355574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>-1.722332</td>\n",
       "      <td>0.827377</td>\n",
       "      <td>-0.474545</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.488854</td>\n",
       "      <td>-1.355574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>-1.718444</td>\n",
       "      <td>-1.566107</td>\n",
       "      <td>0.432793</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>0.420730</td>\n",
       "      <td>-1.355574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>-1.714556</td>\n",
       "      <td>0.827377</td>\n",
       "      <td>-0.474545</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.486337</td>\n",
       "      <td>0.737695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>886</th>\n",
       "      <td>1.714556</td>\n",
       "      <td>-0.369365</td>\n",
       "      <td>-0.474545</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.386671</td>\n",
       "      <td>0.737695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>887</th>\n",
       "      <td>1.718444</td>\n",
       "      <td>-1.566107</td>\n",
       "      <td>-0.474545</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.044381</td>\n",
       "      <td>-1.355574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>888</th>\n",
       "      <td>1.722332</td>\n",
       "      <td>0.827377</td>\n",
       "      <td>0.432793</td>\n",
       "      <td>2.008933</td>\n",
       "      <td>-0.176263</td>\n",
       "      <td>-1.355574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>889</th>\n",
       "      <td>1.726220</td>\n",
       "      <td>-1.566107</td>\n",
       "      <td>-0.474545</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.044381</td>\n",
       "      <td>0.737695</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>890</th>\n",
       "      <td>1.730108</td>\n",
       "      <td>0.827377</td>\n",
       "      <td>-0.474545</td>\n",
       "      <td>-0.473674</td>\n",
       "      <td>-0.492378</td>\n",
       "      <td>0.737695</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>891 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     PassengerId    Pclass     SibSp     Parch      Fare  Sex_male\n",
       "0      -1.730108  0.827377  0.432793 -0.473674 -0.502445  0.737695\n",
       "1      -1.726220 -1.566107  0.432793 -0.473674  0.786845 -1.355574\n",
       "2      -1.722332  0.827377 -0.474545 -0.473674 -0.488854 -1.355574\n",
       "3      -1.718444 -1.566107  0.432793 -0.473674  0.420730 -1.355574\n",
       "4      -1.714556  0.827377 -0.474545 -0.473674 -0.486337  0.737695\n",
       "..           ...       ...       ...       ...       ...       ...\n",
       "886     1.714556 -0.369365 -0.474545 -0.473674 -0.386671  0.737695\n",
       "887     1.718444 -1.566107 -0.474545 -0.473674 -0.044381 -1.355574\n",
       "888     1.722332  0.827377  0.432793  2.008933 -0.176263 -1.355574\n",
       "889     1.726220 -1.566107 -0.474545 -0.473674 -0.044381  0.737695\n",
       "890     1.730108  0.827377 -0.474545 -0.473674 -0.492378  0.737695\n",
       "\n",
       "[891 rows x 6 columns]"
      ]
     },
     "execution_count": 93,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.DataFrame(x_scaled,columns=x.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "0af678e9-3ebe-43e0-9914-a1a80c87192c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>PassengerId</th>\n",
       "      <th>Survived</th>\n",
       "      <th>Pclass</th>\n",
       "      <th>SibSp</th>\n",
       "      <th>Parch</th>\n",
       "      <th>Fare</th>\n",
       "      <th>Sex_male</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>7.2500</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>71.2833</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7.9250</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>53.1000</td>\n",
       "      <td>False</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8.0500</td>\n",
       "      <td>True</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   PassengerId  Survived  Pclass  SibSp  Parch     Fare  Sex_male\n",
       "0            1         0       3      1      0   7.2500      True\n",
       "1            2         1       1      1      0  71.2833     False\n",
       "2            3         1       3      0      0   7.9250     False\n",
       "3            4         1       1      1      0  53.1000     False\n",
       "4            5         0       3      0      0   8.0500      True"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "6b4b14ba-ab1e-44eb-982b-5e9840b5202b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "a62b85c2-5e6a-42b8-a81d-29918bc05c61",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "fab98e61-ccd7-4beb-aac3-1c4487a0a619",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(623, 6)"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "4bf39ad7-9b96-4aa2-b18a-7c51442571bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(268, 6)"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "c741a189-23be-4efb-9a51-b80aab45cd2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "4d0224bd-2b93-462f-9591-d8ebba1012b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "model1=RandomForestClassifier(n_estimators=100,max_depth=10,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "dffac8de-f14f-4d2d-abca-a986baa6b8ff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-1 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-1 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-1 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-1 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-1 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-1 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-1 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-1 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(max_depth=10, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;RandomForestClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(max_depth=10, random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "RandomForestClassifier(max_depth=10, random_state=42)"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "d582902b-5707-4f88-89b4-ed40a1708e07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9614767255216693"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model1.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "d11e84dc-5bd0-47a6-98e1-c86df185c238",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred=model1.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "593c1e20-51a1-403a-8a73-75f94cd3589f",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "380dd35a-848a-4843-b138-efdfa810d0dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7686567164179104"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics.accuracy_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "8ea7f63d-638b-427a-936f-33dc8dadc60c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[133,  24],\n",
       "       [ 38,  73]], dtype=int64)"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics.confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "38b85048-8bb5-46e3-9ae8-e4861a3bbec7",
   "metadata": {},
   "outputs": [],
   "source": [
    "class_names=['not_Survived','Survived']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "5cce6c71-44c7-419b-8f57-c770eb136ced",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(metrics.confusion_matrix(y_test,y_pred),annot=True,fmt='d',xticklabels=class_names,yticklabels=class_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "2ce2b246-93ec-4463-bfd3-3e7305e6fbbc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.78      0.85      0.81       157\n",
      "           1       0.75      0.66      0.70       111\n",
      "\n",
      "    accuracy                           0.77       268\n",
      "   macro avg       0.77      0.75      0.76       268\n",
      "weighted avg       0.77      0.77      0.77       268\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(metrics.classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "18d3ea29-965a-48aa-b96e-a17b561ade55",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.svm import SVC"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "2f22f573-eb31-48c2-86d1-688d6c540475",
   "metadata": {},
   "outputs": [],
   "source": [
    "svm = SVC()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "f68c9748-c2b6-4db3-be38-59f78308cf22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-2 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-2 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-2 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-2 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-2 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-2 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-2 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-2 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-2 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-2 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;SVC<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.svm.SVC.html\">?<span>Documentation for SVC</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>SVC()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "SVC()"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "cea6b094-69eb-421d-819e-6dc528b96ddd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6709470304975923"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "svm.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "75e03e87-474c-4800-9d5d-b774f63893d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred = svm.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "7eb8c0eb-c064-4c71-8c88-6d1a9f694fa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import accuracy_score,confusion_matrix,classification_report"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "50c70947-5893-4bc3-a250-46b1a8b924a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.6044776119402985"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "accuracy_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "2d8883d2-46d6-4ee2-a006-ce6df1adc875",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[154,   3],\n",
       "       [103,   8]], dtype=int64)"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "1525d8cf-d8a6-487d-92e2-42309a8a9ef5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(confusion_matrix(y_test,y_pred),annot=True,fmt='d')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "2e72c2e4-0be8-469c-bc21-2e221036f0ad",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.60      0.98      0.74       157\n",
      "           1       0.73      0.07      0.13       111\n",
      "\n",
      "    accuracy                           0.60       268\n",
      "   macro avg       0.66      0.53      0.44       268\n",
      "weighted avg       0.65      0.60      0.49       268\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "527d724a-4e4c-4a6f-9ec4-bc286723ba8a",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "c7f6cc29-e95b-449d-a5cd-72cd6570aaba",
   "metadata": {},
   "outputs": [],
   "source": [
    "model3=DecisionTreeClassifier(max_depth=10,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "25c702a0-de62-4be3-9401-94593fac796f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-3 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-3 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-3 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-3 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-3 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-3 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-3 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-3 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-3 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-3 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-3 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(max_depth=10, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(max_depth=10, random_state=42)</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "DecisionTreeClassifier(max_depth=10, random_state=42)"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model3.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "66f7175d-68d1-4144-b017-ef7a5b5ed897",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9614767255216693"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model3.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "d43ca9e5-b026-4357-9af7-edaee7de059c",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred=model3.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "61c2f748-0274-4120-bb19-16db29e5c948",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "a0004bfa-07ba-47a1-94c7-4408f09711f1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7238805970149254"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics.accuracy_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "e34fd02d-5ccb-4a57-82c4-d36d9e9752f7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[119,  38],\n",
       "       [ 36,  75]], dtype=int64)"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics.confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "68d557cb-24d0-40bc-ab03-1dc09bcfb609",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(metrics.confusion_matrix(y_test,y_pred),annot=True,fmt='d',xticklabels=class_names,yticklabels=class_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "c6068833-820f-4d4f-a1ef-d0aec1688e5d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.77      0.76      0.76       157\n",
      "           1       0.66      0.68      0.67       111\n",
      "\n",
      "    accuracy                           0.72       268\n",
      "   macro avg       0.72      0.72      0.72       268\n",
      "weighted avg       0.72      0.72      0.72       268\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(metrics.classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "853c006f-5f5e-4262-ae09-2aabe4c011ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "9adfcf19-d3aa-4aef-9425-ff5c59102dac",
   "metadata": {},
   "outputs": [],
   "source": [
    "model4=KNeighborsClassifier(n_neighbors=5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "54c0f4c0-8ef0-42a9-8aa0-d1cd29fd9822",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-4 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-4 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-4 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-4 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-4 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-4 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-4 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-4 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-4 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-4 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-4 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-4\" type=\"checkbox\" checked><label for=\"sk-estimator-id-4\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;KNeighborsClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.neighbors.KNeighborsClassifier.html\">?<span>Documentation for KNeighborsClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>KNeighborsClassifier()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier()"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model4.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "2ba99a32-40e1-48a7-b47a-075b4845abde",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7512038523274478"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model4.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "c5a56465-6a75-40b1-920e-a9c1e92b4486",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred=model1.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "b7ff852e-5ff2-4ae2-a8a6-787ccfc93541",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "891000ae-e85e-446f-b13e-0f00aa54eab4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7686567164179104"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics.accuracy_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "42c2e6aa-a3ee-4cd4-abb6-75f27f84fb77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[133,  24],\n",
       "       [ 38,  73]], dtype=int64)"
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "metrics.confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "fcf8a877-96ac-429b-b114-042755b9f48d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[133,  24],\n",
       "       [ 38,  73]], dtype=int64)"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "85ac3b6d-334c-409d-ac7f-404997763fd5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 139,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.heatmap(metrics.confusion_matrix(y_test,y_pred),annot=True,fmt='d',xticklabels=class_names,yticklabels=class_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "9537760d-9ff2-4334-b18d-2d83a655661b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "           0       0.78      0.85      0.81       157\n",
      "           1       0.75      0.66      0.70       111\n",
      "\n",
      "    accuracy                           0.77       268\n",
      "   macro avg       0.77      0.75      0.76       268\n",
      "weighted avg       0.77      0.77      0.77       268\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(metrics.classification_report(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "54ef5dc7-1890-4585-b60d-e8f0cf8f3640",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.linear_model import LinearRegression"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "07f0d35c-b18e-45ea-9af7-2271c7813b96",
   "metadata": {},
   "outputs": [],
   "source": [
    "model5=LinearRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "7f072d6f-896d-48c1-aba7-d759a428f34f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-5 {\n",
       "  /* Definition of color scheme common for light and dark mode */\n",
       "  --sklearn-color-text: black;\n",
       "  --sklearn-color-line: gray;\n",
       "  /* Definition of color scheme for unfitted estimators */\n",
       "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
       "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
       "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
       "  --sklearn-color-unfitted-level-3: chocolate;\n",
       "  /* Definition of color scheme for fitted estimators */\n",
       "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
       "  --sklearn-color-fitted-level-1: #d4ebff;\n",
       "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
       "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
       "\n",
       "  /* Specific color for light theme */\n",
       "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
       "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
       "  --sklearn-color-icon: #696969;\n",
       "\n",
       "  @media (prefers-color-scheme: dark) {\n",
       "    /* Redefinition of color scheme for dark theme */\n",
       "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
       "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
       "    --sklearn-color-icon: #878787;\n",
       "  }\n",
       "}\n",
       "\n",
       "#sk-container-id-5 {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 pre {\n",
       "  padding: 0;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-hidden--visually {\n",
       "  border: 0;\n",
       "  clip: rect(1px 1px 1px 1px);\n",
       "  clip: rect(1px, 1px, 1px, 1px);\n",
       "  height: 1px;\n",
       "  margin: -1px;\n",
       "  overflow: hidden;\n",
       "  padding: 0;\n",
       "  position: absolute;\n",
       "  width: 1px;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-dashed-wrapped {\n",
       "  border: 1px dashed var(--sklearn-color-line);\n",
       "  margin: 0 0.4em 0.5em 0.4em;\n",
       "  box-sizing: border-box;\n",
       "  padding-bottom: 0.4em;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-container {\n",
       "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
       "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
       "     so we also need the `!important` here to be able to override the\n",
       "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
       "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
       "  display: inline-block !important;\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-text-repr-fallback {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       "div.sk-parallel-item,\n",
       "div.sk-serial,\n",
       "div.sk-item {\n",
       "  /* draw centered vertical line to link estimators */\n",
       "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
       "  background-size: 2px 100%;\n",
       "  background-repeat: no-repeat;\n",
       "  background-position: center center;\n",
       "}\n",
       "\n",
       "/* Parallel-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item::after {\n",
       "  content: \"\";\n",
       "  width: 100%;\n",
       "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
       "  flex-grow: 1;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel {\n",
       "  display: flex;\n",
       "  align-items: stretch;\n",
       "  justify-content: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  position: relative;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:first-child::after {\n",
       "  align-self: flex-end;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:last-child::after {\n",
       "  align-self: flex-start;\n",
       "  width: 50%;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-parallel-item:only-child::after {\n",
       "  width: 0;\n",
       "}\n",
       "\n",
       "/* Serial-specific style estimator block */\n",
       "\n",
       "#sk-container-id-5 div.sk-serial {\n",
       "  display: flex;\n",
       "  flex-direction: column;\n",
       "  align-items: center;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  padding-right: 1em;\n",
       "  padding-left: 1em;\n",
       "}\n",
       "\n",
       "\n",
       "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
       "clickable and can be expanded/collapsed.\n",
       "- Pipeline and ColumnTransformer use this feature and define the default style\n",
       "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
       "*/\n",
       "\n",
       "/* Pipeline and ColumnTransformer style (default) */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable {\n",
       "  /* Default theme specific background. It is overwritten whether we have a\n",
       "  specific estimator or a Pipeline/ColumnTransformer */\n",
       "  background-color: var(--sklearn-color-background);\n",
       "}\n",
       "\n",
       "/* Toggleable label */\n",
       "#sk-container-id-5 label.sk-toggleable__label {\n",
       "  cursor: pointer;\n",
       "  display: block;\n",
       "  width: 100%;\n",
       "  margin-bottom: 0;\n",
       "  padding: 0.5em;\n",
       "  box-sizing: border-box;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:before {\n",
       "  /* Arrow on the left of the label */\n",
       "  content: \"â–¸\";\n",
       "  float: left;\n",
       "  margin-right: 0.25em;\n",
       "  color: var(--sklearn-color-icon);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {\n",
       "  color: var(--sklearn-color-text);\n",
       "}\n",
       "\n",
       "/* Toggleable content - dropdown */\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content {\n",
       "  max-height: 0;\n",
       "  max-width: 0;\n",
       "  overflow: hidden;\n",
       "  text-align: left;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content pre {\n",
       "  margin: 0.2em;\n",
       "  border-radius: 0.25em;\n",
       "  color: var(--sklearn-color-text);\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-toggleable__content.fitted pre {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
       "  /* Expand drop-down */\n",
       "  max-height: 200px;\n",
       "  max-width: 100%;\n",
       "  overflow: auto;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
       "  content: \"â–¾\";\n",
       "}\n",
       "\n",
       "/* Pipeline/ColumnTransformer-specific style */\n",
       "\n",
       "#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator-specific style */\n",
       "\n",
       "/* Colorize estimator box */\n",
       "#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label label.sk-toggleable__label,\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  /* The background is the default theme color */\n",
       "  color: var(--sklearn-color-text-on-default-background);\n",
       "}\n",
       "\n",
       "/* On hover, darken the color of the background */\n",
       "#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "/* Label box, darken color on hover, fitted */\n",
       "#sk-container-id-5 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
       "  color: var(--sklearn-color-text);\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Estimator label */\n",
       "\n",
       "#sk-container-id-5 div.sk-label label {\n",
       "  font-family: monospace;\n",
       "  font-weight: bold;\n",
       "  display: inline-block;\n",
       "  line-height: 1.2em;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-label-container {\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       "/* Estimator-specific */\n",
       "#sk-container-id-5 div.sk-estimator {\n",
       "  font-family: monospace;\n",
       "  border: 1px dotted var(--sklearn-color-border-box);\n",
       "  border-radius: 0.25em;\n",
       "  box-sizing: border-box;\n",
       "  margin-bottom: 0.5em;\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-0);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-0);\n",
       "}\n",
       "\n",
       "/* on hover */\n",
       "#sk-container-id-5 div.sk-estimator:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-2);\n",
       "}\n",
       "\n",
       "#sk-container-id-5 div.sk-estimator.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-2);\n",
       "}\n",
       "\n",
       "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
       "\n",
       "/* Common style for \"i\" and \"?\" */\n",
       "\n",
       ".sk-estimator-doc-link,\n",
       "a:link.sk-estimator-doc-link,\n",
       "a:visited.sk-estimator-doc-link {\n",
       "  float: right;\n",
       "  font-size: smaller;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1em;\n",
       "  height: 1em;\n",
       "  width: 1em;\n",
       "  text-decoration: none !important;\n",
       "  margin-left: 1ex;\n",
       "  /* unfitted */\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted,\n",
       "a:link.sk-estimator-doc-link.fitted,\n",
       "a:visited.sk-estimator-doc-link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
       ".sk-estimator-doc-link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover,\n",
       "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
       ".sk-estimator-doc-link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "/* Span, style for the box shown on hovering the info icon */\n",
       ".sk-estimator-doc-link span {\n",
       "  display: none;\n",
       "  z-index: 9999;\n",
       "  position: relative;\n",
       "  font-weight: normal;\n",
       "  right: .2ex;\n",
       "  padding: .5ex;\n",
       "  margin: .5ex;\n",
       "  width: min-content;\n",
       "  min-width: 20ex;\n",
       "  max-width: 50ex;\n",
       "  color: var(--sklearn-color-text);\n",
       "  box-shadow: 2pt 2pt 4pt #999;\n",
       "  /* unfitted */\n",
       "  background: var(--sklearn-color-unfitted-level-0);\n",
       "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link.fitted span {\n",
       "  /* fitted */\n",
       "  background: var(--sklearn-color-fitted-level-0);\n",
       "  border: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "\n",
       ".sk-estimator-doc-link:hover span {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link {\n",
       "  float: right;\n",
       "  font-size: 1rem;\n",
       "  line-height: 1em;\n",
       "  font-family: monospace;\n",
       "  background-color: var(--sklearn-color-background);\n",
       "  border-radius: 1rem;\n",
       "  height: 1rem;\n",
       "  width: 1rem;\n",
       "  text-decoration: none;\n",
       "  /* unfitted */\n",
       "  color: var(--sklearn-color-unfitted-level-1);\n",
       "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted {\n",
       "  /* fitted */\n",
       "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
       "  color: var(--sklearn-color-fitted-level-1);\n",
       "}\n",
       "\n",
       "/* On hover */\n",
       "#sk-container-id-5 a.estimator_doc_link:hover {\n",
       "  /* unfitted */\n",
       "  background-color: var(--sklearn-color-unfitted-level-3);\n",
       "  color: var(--sklearn-color-background);\n",
       "  text-decoration: none;\n",
       "}\n",
       "\n",
       "#sk-container-id-5 a.estimator_doc_link.fitted:hover {\n",
       "  /* fitted */\n",
       "  background-color: var(--sklearn-color-fitted-level-3);\n",
       "}\n",
       "</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;LinearRegression<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.LinearRegression.html\">?<span>Documentation for LinearRegression</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>LinearRegression()</pre></div> </div></div></div></div>"
      ],
      "text/plain": [
       "LinearRegression()"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model5.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "8cc05d75-b2ca-4aaf-b885-5f62848288ab",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred=model5.predict(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "4a815c7f-baeb-4723-b77d-893a9c4a3fa1",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.metrics import mean_squared_error,r2_score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "0442b367-10f2-433e-bc33-827bc03d1bb9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.1655040187215026"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_squared_error(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "73376657-29c8-4596-ad3e-2a8fae4d4325",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.31788829743196145"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "r2_score(y_test,y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "f2a85057-6314-4371-81e6-d947f11c0c11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "268"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "db8e6d90-fb12-42e6-b686-43db3a10e0e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Not Survived')"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(x=y_test,y=y_pred)\n",
    "plt.xlabel(\"Survived\")\n",
    "plt.ylabel(\"Not Survived\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "001b1c1b-c207-44cc-ac71-c61381ce6632",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x23442f82180>]"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "c=range(len(y_test))\n",
    "plt.plot(c,y_test,color='red')\n",
    "plt.plot(c,y_pred,color='green')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "303516eb-e93f-4824-9d45-3e8b1d1fec6d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c207318a-5e65-4380-a1b5-2e64f1c02773",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "32f28390-1d10-4f59-9f0b-df3bca9bd83e",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0db6f667-86bf-4472-9241-b42e4bf4fda8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "30757eae-3708-412b-a393-907e359301db",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "da9408b2-6807-4c06-b00b-9052a6d6793c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
